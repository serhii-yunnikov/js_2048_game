{"version":3,"sources":["scripts/main.js"],"names":["cells","document","querySelectorAll","start","querySelector","rowsCollection","score","messages","messageLose","messageWin","generateEven","num","Math","random","forEach","cell","index","dataset","generateRandomNumber","ceil","generateCellNoRepeated","randomArr","number1","push","number2","includes","erase","className","innerHTML","cellNo","number","generateFreePlace","freeCellsCollection","filter","innerText","map","randomPlace","floor","length","freeCell","freeCellValue","classList","add","mergeCells","n","qurrentCell","previousCell","qurrentCellValue","Number","moveCells","count","upCellsNum","downCellsNum","leftCellsNum","i","row","children","rightCellsNum","theEnd","rows","compareCells","every","slice","item","addEventListener","value1","value2","firstCells","firstGenerated","secondGenerated","message","e","dataBeforeClick","toString","code","toggle"],"mappings":"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","file":"main.d9c78e53.js","sourceRoot":"../src","sourcesContent":["'use strict';\n\nconst cells = [...document.querySelectorAll('.field-cell')];\nconst start = document.querySelector('.start');\nconst rowsCollection = [...document.querySelectorAll('.field-row')];\nconst score = document.querySelector('.game-score');\nconst messages = document.querySelectorAll('.message');\nconst messageLose = document.querySelector('.message-lose');\nconst messageWin = document.querySelector('.message-win');\n\ncells.forEach((cell, index) => {\n  cell.dataset.num = `${index + 1}`;\n});\n\nfunction generateEven() {\n  const num = Math.random();\n\n  return num <= 0.1 ? 4 : 2;\n}\n\nconst generateRandomNumber = () => Math.ceil(Math.random() * 16);\n\nfunction generateCellNoRepeated() {\n  const randomArr = [];\n  const number1 = generateRandomNumber();\n\n  randomArr.push(number1);\n\n  let number2 = generateRandomNumber();\n\n  while (randomArr.includes(number2)) {\n    number2 = generateRandomNumber();\n  }\n\n  randomArr.push(number2);\n\n  return randomArr;\n}\n\nfunction erase() {\n  cells.forEach(cell => {\n    cell.className = 'field-cell';\n    cell.innerHTML = '';\n  });\n}\n\nstart.addEventListener('click', () => {\n  start.className = 'button restart';\n  start.innerText = 'Restart';\n  erase();\n  score.innerText = '0';\n\n  const value1 = generateEven();\n  const value2 = generateEven();\n\n  const firstCells = generateCellNoRepeated();\n\n  const firstGenerated\n  = document.querySelector(`[data-num=\"${firstCells[0]}\"]`);\n  const secondGenerated\n  = document.querySelector(`[data-num=\"${firstCells[1]}\"]`);\n\n  firstGenerated.classList.add(`field-cell--${value1}`);\n  secondGenerated.classList.add(`field-cell--${value2}`);\n\n  firstGenerated.innerText = `${value1}`;\n  secondGenerated.innerText = `${value2}`;\n\n  messages.forEach(message => {\n    message.className = 'message message-lose hidden';\n  });\n});\n\nfunction cellNo(number) {\n  return document.querySelector(`[data-num=\"${number}\"]`);\n}\n\nfunction generateFreePlace() {\n  const freeCellsCollection = cells.filter(cell => cell.innerText === '')\n    .map(cell => cell.dataset.num);\n  const randomPlace = Math.floor(Math.random() * freeCellsCollection.length);\n  const freeCell\n  = document.querySelector(`[data-num=\"${freeCellsCollection[randomPlace]}\"]`);\n  const freeCellValue = generateEven();\n\n  freeCell.innerText = `${freeCellValue}`;\n  freeCell.classList.add(`field-cell--${freeCellValue}`);\n}\n\nfunction mergeCells() {\n  for (let n = 1; n <= 12; n++) {\n    const qurrentCell = cellNo(n);\n    const previousCell = cellNo(n + 4);\n    const qurrentCellValue = qurrentCell.innerText;\n\n    if (qurrentCell.className === previousCell.className\n      && qurrentCellValue.length) {\n      qurrentCell.innerText = `${2 * qurrentCellValue}`;\n      score.innerText = `${Number(score.innerText) + 2 * qurrentCellValue}`;\n\n      qurrentCell.className\n      = `field-cell field-cell--${qurrentCell.innerText}`;\n      previousCell.innerText = '';\n      previousCell.className = 'field-cell';\n    }\n  }\n}\n\nfunction moveCells() {\n  let count;\n\n  do {\n    count = 0;\n\n    for (let n = 1; n <= 12; n++) {\n      const qurrentCell = cellNo(n);\n      const previousCell = cellNo(n + 4);\n\n      if (qurrentCell.innerText === ''\n      && previousCell.innerText.length !== 0) {\n        qurrentCell.className = `${previousCell.classList}`;\n        qurrentCell.innerText = `${previousCell.innerText}`;\n        previousCell.innerText = '';\n        previousCell.className = 'field-cell';\n        count++;\n      }\n    }\n  } while (count > 0);\n}\n\nfunction upCellsNum() {\n  cells.forEach((cell, index) => {\n    cell.dataset.num = `${index + 1}`;\n  });\n}\n\nfunction downCellsNum() {\n  cells.forEach((cell, index) => {\n    cell.dataset.num = `${16 - index}`;\n  });\n}\n\nfunction leftCellsNum() {\n  let index = 0;\n\n  for (let i = 0; i <= 3; i++) {\n    rowsCollection.forEach(row => {\n      row.children[i].dataset.num = `${index + 1}`;\n      index++;\n    });\n  }\n}\n\nfunction rightCellsNum() {\n  let index = 0;\n\n  for (let i = 3; i >= 0; i--) {\n    rowsCollection.forEach(row => {\n      row.children[i].dataset.num = `${index + 1}`;\n      index++;\n    });\n  }\n}\n\nfunction theEnd() {\n  const rows = rowsCollection.map(row => [...row.children]);\n  const compareCells = [];\n\n  for (let i = 0; i < 3; i++) {\n    compareCells.push(rows[i].every((cell, index) =>\n      cell.innerText !== rows[i + 1][index].innerText));\n  }\n\n  for (let i = 0; i < 4; i++) {\n    compareCells.push(rows[i].slice(0, -1).every((cell, index) =>\n      cell.innerText !== rows[i].slice(1)[index].innerText));\n  }\n\n  return compareCells.every(item => item === true);\n}\n\ndocument.addEventListener('keydown', (e) => {\n  const dataBeforeClick = cells.map(cell => cell.innerText).toString();\n\n  switch (e.code) {\n    case 'ArrowDown':\n      downCellsNum();\n      moveCells();\n      mergeCells();\n      break;\n    case 'ArrowUp':\n      upCellsNum();\n      moveCells();\n      mergeCells();\n      break;\n    case 'ArrowLeft':\n      leftCellsNum();\n      moveCells();\n      mergeCells();\n      break;\n    case 'ArrowRight':\n      rightCellsNum();\n      moveCells();\n      mergeCells();\n      break;\n  }\n\n  const dataAfterClick = cells.map(cell => cell.innerText).toString();\n\n  if (dataAfterClick !== dataBeforeClick) {\n    generateFreePlace();\n  }\n\n  if (cells.every(cell => cell.innerText !== '')\n  && theEnd()) {\n    messageLose.className = 'message message-lose';\n  }\n\n  if (score.innerText === '2048') {\n    messageWin.classList.toggle('hidden');\n  }\n});\n"]}